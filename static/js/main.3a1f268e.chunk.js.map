{"version":3,"sources":["components/Filter/filter.module.css","components/ContactItem/contactItem.module.css","redux/contactsApi/contactSlice.jsx","redux/contacts/contacts-actions.jsx","redux/contacts/contacts-reducer.jsx","redux/store.jsx","components/ContactForm/contactForm.jsx","components/ContactItem/contactItem.jsx","redux/contacts/contacts-selectors.jsx","components/ContactsList/contactsList.jsx","components/Filter/filter.jsx","App.js","index.js","components/ContactForm/contactForm.module.css"],"names":["module","exports","contactApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContact","query","providesTags","deleteContact","mutation","contactId","url","method","invalidatesTags","createContact","body","useFetchContactQuery","useDeleteContactMutation","useCreateContactMutation","contactsActions","changeFilter","createAction","filter","createReducer","actions","_","payload","contacts","combineReducers","reducer","store","configureStore","middleware","getDefaultMiddleware","setupListeners","dispatch","ContactForm","className","s","contact__form","onSubmit","e","preventDefault","target","name","number","find","el","toLowerCase","value","alert","contact__label","contact__input","type","pattern","title","required","contact__btn","ContactItem","id","contact__item","onClick","state","ContactsList","useSelector","contactsSelectors","console","log","trimFilter","trim","map","normalizedFilter","contact","includes","getVisibleContacts","Filter","useDispatch","filter__label","filter__name","filter__input","onChange","App","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a1f268e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"filter_filter__label__27nBA\",\"filter__input\":\"filter_filter__input__1ezh4\",\"filter__name\":\"filter_filter__name__1ra8K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__item\":\"contactItem_contact__item__XNVev\"};","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const contactApi = createApi({\r\n  reducerPath: 'contactApi',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://61793a15aa7f340017404892.mockapi.io/',\r\n  }),\r\n  tagTypes: ['Contact'],\r\n  endpoints: builder => ({\r\n    fetchContact: builder.query({\r\n      query: () => '/contacts',\r\n      providesTags: ['Contact'],\r\n    }),\r\n    deleteContact: builder.mutation({\r\n      query: contactId => ({\r\n        url: `/contacts/${contactId}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n    createContact: builder.mutation({\r\n      query: body => ({\r\n        url: '/contacts',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Contact'],\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const { useFetchContactQuery, useDeleteContactMutation, useCreateContactMutation } =\r\n  contactApi;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n\r\nconst contactsActions = { changeFilter };\r\nexport default contactsActions;\r\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport actions from './contacts-actions';\r\n\r\nexport const filter = createReducer('', {\r\n  [actions.changeFilter]: (_, { payload }) => payload,\r\n});\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { setupListeners } from '@reduxjs/toolkit/query';\r\nimport { contactApi } from './contactsApi/contactSlice';\r\nimport { filter } from './contacts/contacts-reducer';\r\n\r\nconst contacts = combineReducers({\r\n  [contactApi.reducerPath]: contactApi.reducer,\r\n  filter,\r\n});\r\n\r\nexport const store = configureStore({\r\n  reducer: contacts,\r\n  middleware: getDefaultMiddleware => [...getDefaultMiddleware(), contactApi.middleware],\r\n});\r\n\r\nsetupListeners(store.dispatch);\r\n","import s from './contactForm.module.css';\r\nimport { useCreateContactMutation } from '../../redux/contactsApi/contactSlice';\r\n\r\nconst ContactForm = ({ contacts }) => {\r\n  const [createContact] = useCreateContactMutation();\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    const { name, number } = e.target;\r\n\r\n    const repeatName = contacts.find(el => el.name.toLowerCase() === name.value.toLowerCase());\r\n\r\n    repeatName\r\n      ? alert(`${name.value} is already in your contacts!`)\r\n      : createContact({ name: name.value, number: number.value });\r\n\r\n    name.value = '';\r\n    number.value = '';\r\n  };\r\n\r\n  return (\r\n    <form className={s.contact__form} onSubmit={e => onSubmit(e)}>\r\n      <h3 className={s.contact__label}>Name</h3>\r\n      <input\r\n        className={s.contact__input}\r\n        type=\"text\"\r\n        name=\"name\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        required\r\n      />\r\n      <h3 className={s.contact__label}>Number</h3>\r\n      <input\r\n        className={s.contact__input}\r\n        type=\"tel\"\r\n        name=\"number\"\r\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n        required\r\n      />\r\n      <button className={s.contact__btn} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import PropTypes from 'prop-types';\r\nimport { useDeleteContactMutation } from '../../redux/contactsApi/contactSlice';\r\nimport s from './contactItem.module.css';\r\n\r\nconst ContactItem = ({ name, number, id }) => {\r\n  const [deleteContact] = useDeleteContactMutation();\r\n\r\n  return (\r\n    <li className={s.contact__item}>\r\n      {name}:{number}\r\n      <button type=\"button\" className=\"TodoList__btn\" id={id} onClick={() => deleteContact(id)}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactItem;\r\n","export const filter = state => state.filter;\r\n","import { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ContactItem from '../ContactItem/contactItem';\r\nimport { contactsSelectors } from '../../redux/contacts';\r\n\r\nconst ContactsList = ({ contacts }) => {\r\n  const filter = useSelector(contactsSelectors.filter);\r\n  console.log(filter);\r\n  const trimFilter = filter.trim() === '';\r\n\r\n  const getVisibleContacts = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {trimFilter\r\n        ? contacts.map(({ id, name, number }) => (\r\n            <ContactItem key={id} id={id} name={name} number={number} />\r\n          ))\r\n        : getVisibleContacts().map(({ id, name, number }) => (\r\n            <ContactItem key={id} id={id} name={name} number={number} />\r\n          ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport s from './filter.module.css';\r\nimport contactsActions from '../../redux/contacts/contacts-actions';\r\n\r\nconst Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      <h3 className={s.filter__name}>Find contacts by name</h3>\r\n      <input\r\n        className={s.filter__input}\r\n        type=\"text\"\r\n        onChange={e => dispatch(contactsActions.changeFilter(e.target.value))}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;\r\n","import ContactForm from './components/ContactForm/contactForm';\nimport ContactsList from './components/ContactsList/contactsList';\nimport Filter from './components/Filter/filter';\nimport { useFetchContactQuery } from './redux/contactsApi/contactSlice';\n\nconst App = () => {\n  const { data: contacts } = useFetchContactQuery();\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm contacts={contacts} />\n\n      <>\n        <h2>Contacts</h2>\n        <Filter />\n        {contacts && <ContactsList contacts={contacts} />}\n      </>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\n\nimport { store } from './redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact__form\":\"contactForm_contact__form__2AmZl\",\"contact__label\":\"contactForm_contact__label__1xCvn\",\"contact__input\":\"contactForm_contact__input__i-nfv\",\"contact__btn\":\"contactForm_contact__btn__qzamS\"};"],"sourceRoot":""}